// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/articles/articles_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "backend/pkg/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockArticleServices is a mock of ArticleServices interface.
type MockArticleServices struct {
	ctrl     *gomock.Controller
	recorder *MockArticleServicesMockRecorder
}

// MockArticleServicesMockRecorder is the mock recorder for MockArticleServices.
type MockArticleServicesMockRecorder struct {
	mock *MockArticleServices
}

// NewMockArticleServices creates a new mock instance.
func NewMockArticleServices(ctrl *gomock.Controller) *MockArticleServices {
	mock := &MockArticleServices{ctrl: ctrl}
	mock.recorder = &MockArticleServicesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticleServices) EXPECT() *MockArticleServicesMockRecorder {
	return m.recorder
}

// CreateArticle mocks base method.
func (m *MockArticleServices) CreateArticle(article *models.Article) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticle", article)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateArticle indicates an expected call of CreateArticle.
func (mr *MockArticleServicesMockRecorder) CreateArticle(article interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticle", reflect.TypeOf((*MockArticleServices)(nil).CreateArticle), article)
}

// GetAllArticles mocks base method.
func (m *MockArticleServices) GetAllArticles() ([]models.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllArticles")
	ret0, _ := ret[0].([]models.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllArticles indicates an expected call of GetAllArticles.
func (mr *MockArticleServicesMockRecorder) GetAllArticles() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllArticles", reflect.TypeOf((*MockArticleServices)(nil).GetAllArticles))
}

// GetArticleByID mocks base method.
func (m *MockArticleServices) GetArticleByID(id int) (*models.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArticleByID", id)
	ret0, _ := ret[0].(*models.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetArticleByID indicates an expected call of GetArticleByID.
func (mr *MockArticleServicesMockRecorder) GetArticleByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArticleByID", reflect.TypeOf((*MockArticleServices)(nil).GetArticleByID), id)
}
